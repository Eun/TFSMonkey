<Application x:Class="TFSMonkey.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:util="clr-namespace:TFSMonkey.Util"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
		<ResourceDictionary>

			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/PresentationFramework.Aero2;component/themes/Aero2.NormalColor.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<util:BoolToVisibilityConverter x:Key="BoolToHiddenConverter" TrueValue="Visible" FalseValue="Hidden" />
			<util:BoolToVisibilityConverter x:Key="BoolToVisibleConverter" TrueValue="Hidden" FalseValue="Visible" />
			<util:CountToVisibilityConverter x:Key="ItemEmptyToHiddenConverter" TrueValue="Hidden" FalseValue="Visible" />
			<util:CountToVisibilityConverter x:Key="ItemEmptyToVisibleConverter" TrueValue="Visible" FalseValue="Hidden" />
			<util:StringToVisibilityConverter x:Key="StringEmptyToHiddenConverter" TrueValue="Visible" FalseValue="Hidden" />
			<util:StringToBooleanConverter x:Key="StringEmptyToFalseConverter" TrueValue="True" FalseValue="False" />
			<util:DateToRelativeDateStringConverter x:Key="ToRelativeDateStringConverter"/>
			<util:RemoveNewLinesConverter x:Key="RemoveNewLinesConverter"/>
			<util:ColorToSolidColorBrushValueConverter x:Key="ColorToSolidColorBrushValueConverter"/>

			<Style TargetType="{x:Type Window}">
				<Setter Property="Background" Value="#fffdfdfd" />
			</Style>

			<Style TargetType="{x:Type StatusBar}">
				<Setter Property="Background" Value="#fffafafa" />
				<Setter Property="FontSize" Value="14" />
				<Setter Property="FontFamily" Value="Segoe UI"/>
				<Setter Property="FontWeight" Value="SemiBold" />
			</Style>

			<Style TargetType="{x:Type TabControl}">
				<Setter Property="OverridesDefaultStyle" Value="True" />
				<Setter Property="SnapsToDevicePixels" Value="True" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TabControl}">
							<Grid KeyboardNavigation.TabNavigation="Local">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<TabPanel
									Grid.Row="0"
									IsItemsHost="True"
									KeyboardNavigation.TabIndex="1"
									Margin="10,0,10,10"/>
								<ContentPresenter
									Grid.Row="1"
									ContentSource="SelectedContent" 
									KeyboardNavigation.TabNavigation="Local"
									KeyboardNavigation.DirectionalNavigation="Contained"
									KeyboardNavigation.TabIndex="2"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style TargetType="{x:Type TabItem}">
				<Setter Property="OverridesDefaultStyle" Value="True" />
				<Setter Property="SnapsToDevicePixels" Value="True" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TabItem}">
							<Grid>
								<TextBlock Name="TextBlock"
										   Margin="0,0,10,0"
										   FontFamily="Segoe UI"
										   FontSize="20"
										   Typography.Capitals="AllSmallCaps"
										   FontWeight="SemiBold"
										   TextOptions.TextFormattingMode="Ideal"
										   Foreground="#ffa9a9a9">
									<ContentPresenter
													  VerticalAlignment="Center"
													  HorizontalAlignment="Center"
													  ContentSource="Header" 
													  RecognizesAccessKey="True"/>
								</TextBlock>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter TargetName="TextBlock" Property="Foreground" Value="#ff656565"/>
								</Trigger>
								<Trigger Property="IsFocused" Value="true">
									<Setter TargetName="TextBlock" Property="Foreground" Value="#ff656565"/>
								</Trigger>
								<Trigger Property="IsSelected" Value="True">
									<Setter TargetName="TextBlock" Property="Foreground" Value="#ff333333" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="TextBlock" Property="Foreground" Value="#ffdddddd" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style TargetType="{x:Type Button}">
				<Setter Property="OverridesDefaultStyle" Value="True" />
				<Setter Property="SnapsToDevicePixels" Value="True" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Border
										Name="Border"
										BorderThickness="1"
										BorderBrush="#ffa9a9a9">
									<TextBlock Name="TextBlock"
										   FontFamily="Segoe UI"
										   FontSize="14"
										   TextOptions.TextFormattingMode="Ideal"
										   Margin="14,4"
										   Foreground="#ff333333"
										   TextAlignment="Center">
										<ContentPresenter
											VerticalAlignment="Center"
											HorizontalAlignment="Center"
											RecognizesAccessKey="True"
											/>
									</TextBlock>
								</Border>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter TargetName="Border" Property="Background" Value="#ffeeeeee"/>
									<Setter TargetName="Border" Property="BorderBrush" Value="#ffc9c9c9"/>
								</Trigger>
								<Trigger Property="IsFocused" Value="true">
									<Setter TargetName="Border" Property="BorderBrush" Value="#ffc9c9c9"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="TextBlock" Property="Foreground" Value="#ffdddddd" />
									<Setter TargetName="Border" Property="BorderBrush" Value="#ffc9c9c9"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="AdornerTextStyle"
            TargetType="{x:Type TextBlock}">
				<Setter Property="Foreground" Value="#ffdddddd" />
				<Setter Property="Opacity" Value="1" />
				<Setter Property="FontSize" Value="12" />
				<Setter Property="FontFamily" Value="Segoe UI"/>
			</Style>

			<Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
				<Setter Property="FontSize" Value="12" />
				<Setter Property="FontFamily" Value="Segoe UI"/>
			</Style>


			<Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
				<Setter Property="FontSize" Value="14" />
				<Setter Property="FontFamily" Value="Segoe UI"/>
				<Setter Property="BorderThickness" Value="0"/>
			</Style>

			<!-- Parts are by firstfloorsoftware/mui -->

			<Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Canvas.Right" Value="-9"/>
				<Setter Property="Width" Value="18"/>
				<Setter Property="Height" Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}"/>
				<Setter Property="Padding" Value="0"/>
				<Setter Property="Background" Value="#ffc9c9c9"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Thumb}">
							<Border Padding="{TemplateBinding Padding}" Background="Transparent">
								<Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}"/>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>



			<Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="HorizontalContentAlignment" Value="Center"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="BorderThickness" Value="0"/>
				<Setter Property="Padding" Value="4,3,4,3"/>
				<Setter Property="Foreground" Value="#ff333333"/>
				<Setter Property="FontFamily" Value="Segoe UI"/>
				<Setter Property="FontSize" Value="12" />
				<Setter Property="FontWeight" Value="Bold" />
				<Setter Property="Margin" Value="0" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
							<Grid SnapsToDevicePixels="true">
								<Border Name="HeaderBorder" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition MaxHeight="7"/>
											<RowDefinition/>
										</Grid.RowDefinitions>
										<Border Grid.RowSpan="2" Padding="{TemplateBinding Padding}">
											<ContentPresenter
												Name="HeaderContent" Margin="0,0,0,1"
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												RecognizesAccessKey="True"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
										</Border>
									</Grid>
								</Border>
								<Canvas>
									<Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" Visibility="Collapsed"/>
								</Canvas>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="#ffdddddd"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter TargetName="HeaderBorder" Property="Background" Value="#ffdddddd"/>
									<Setter TargetName="PART_HeaderGripper" Property="Background" Value="Transparent"/>
									<Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Visible"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter TargetName="HeaderBorder" Property="Background" Value="#ffdddddd"/>
									<Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Hidden"/>
								</Trigger>
								<Trigger Property="Height" Value="Auto">
									<Setter Property="MinHeight" Value="20"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="{x:Static GridView.GridViewStyleKey}" TargetType="{x:Type ListView}">
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="BorderThickness" Value="0"/>
				<Setter Property="Foreground" Value="#ff333333"/>
				<Setter Property="FontFamily" Value="Segoe UI"/>
				<Setter Property="FontSize" Value="14"/>
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
				<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
				<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
				<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListView}">
							<Border Name="Bd"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               Background="{TemplateBinding Background}"
                               SnapsToDevicePixels="true">
								<ScrollViewer Padding="{TemplateBinding Padding}">
									<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</ScrollViewer>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsGrouping" Value="true">
									<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style TargetType="{x:Type ListView}">
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="Background" Value="Transparent" />
			</Style>

			<Style TargetType="{x:Type ListViewItem}">
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="Transparent"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="Margin" Value="0"/>
				<Setter Property="Foreground" Value="#ff333333"/>
				<Setter Property="FontFamily" Value="Segoe UI"/>
				<Setter Property="FontSize" Value="14"/>
				<Setter Property="Padding" Value="5,2,5,2"/>
				<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListViewItem}">
							<Grid Background="{TemplateBinding Background}">
								<Border Name="Selection" Visibility="Collapsed"/>
								<!-- This is used when GridView is put inside the ListView -->
								<GridViewRowPresenter Grid.RowSpan="2"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

								<!-- This is used for ListView that does not use GridView -->
								<ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding ContentControl.Content}"
                                          Visibility="Collapsed"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
									<Setter TargetName="contentPresenter" Property="Visibility" Value="Visible"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter TargetName="Selection" Property="Visibility" Value="Visible"/>
									<Setter TargetName="Selection" Property="Background" Value="#ffdddddd"/>
								</Trigger>
								<Trigger Property="IsSelected" Value="true">
									<Setter TargetName="Selection" Property="Visibility" Value="Visible"/>
									<Setter TargetName="Selection" Property="Background" Value="#ff1ba1e2"/>
									<Setter Property="Foreground" Value="#fffdfdfd" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="#ffdddddd"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
				<Setter Property="OverridesDefaultStyle" Value="true"/>
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="#ffa9a9a9"/>
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Thumb}">
							<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
							</Border>

							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Background" Value="#ffeeeeee"/>
									<Setter Property="BorderBrush" Value="#ffc9c9c9"/>
								</Trigger>
								<Trigger Property="IsDragging" Value="True">
									<Setter Property="Background" Value="#ffeeeeee"/>
									<Setter Property="BorderBrush" Value="#ffc9c9c9"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="ScrollBarButton"
           TargetType="{x:Type RepeatButton}">
				<Setter Property="OverridesDefaultStyle"
                Value="true"/>
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="#ffa9a9a9"/>
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Foreground" Value="#ff333333"/>
				<Setter Property="Focusable"
                Value="false"/>
				<Setter Property="IsTabStop"
                Value="false"/>
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type RepeatButton}">
							<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
								<ContentPresenter Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Background" Value="#ffeeeeee" />
									<Setter Property="BorderBrush" Value="#ffc9c9c9" />
								</Trigger>
								<Trigger Property="IsPressed" Value="True">
									<Setter Property="Background" Value="#ffeeeeee" />
									<Setter Property="BorderBrush" Value="#ffc9c9c9" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="ScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
				<Setter Property="OverridesDefaultStyle"
                Value="true"/>
				<Setter Property="Background"
                Value="Transparent"/>
				<Setter Property="Focusable"
                Value="false"/>
				<Setter Property="IsTabStop"
                Value="false"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type RepeatButton}">
							<Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
				<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<Grid Name="Bg"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true" >
								<Grid.RowDefinitions>
									<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
									<RowDefinition Height="0.00001*"/>
									<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
								</Grid.RowDefinitions>
								<RepeatButton Style="{StaticResource ScrollBarButton}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      Margin="0,0,0,-1">
									<Path Width="7" Height="4" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 4 L 3.5 0 L 7 4 Z" />
								</RepeatButton>
								<Track Grid.Row="1"
                               Name="PART_Track"
                               IsEnabled="{TemplateBinding IsMouseOver}"
                               IsDirectionReversed="true">
									<Track.DecreaseRepeatButton>
										<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb Style="{StaticResource ScrollBarThumb}" Padding="4,0" />
									</Track.Thumb>
								</Track>
								<RepeatButton Style="{StaticResource ScrollBarButton}"
                                      Grid.Row="2"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      Margin="0,-1,0,0">
									<Path Width="7" Height="4" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 0 L 3.5 4 L 7 0 Z" />
								</RepeatButton>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="Orientation" Value="Horizontal">
						<Setter Property="Width" Value="Auto"/>
						<Setter Property="MinWidth" Value="0"/>
						<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
						<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ScrollBar}">
									<Grid Name="Bg"
                                  Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="true" >
										<Grid.ColumnDefinitions>
											<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
											<ColumnDefinition Width="0.00001*"/>
											<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
										</Grid.ColumnDefinitions>
										<RepeatButton Style="{StaticResource ScrollBarButton}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineLeftCommand}" 
                                              Margin="0,0,-1,0">
											<Path Width="4" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 3.5 L 4 7 L 4 0 Z" />
										</RepeatButton>
										<Track Grid.Column="1"
                                       Name="PART_Track"
                                       IsEnabled="{TemplateBinding IsMouseOver}"
                                       IsDirectionReversed="False">
											<Track.DecreaseRepeatButton>
												<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageLeftCommand}"/>
											</Track.DecreaseRepeatButton>
											<Track.IncreaseRepeatButton>
												<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageRightCommand}"/>
											</Track.IncreaseRepeatButton>
											<Track.Thumb>
												<Thumb Style="{StaticResource ScrollBarThumb}" Padding="0,4" />
											</Track.Thumb>
										</Track>
										<RepeatButton Style="{StaticResource ScrollBarButton}"
                                              Grid.Column="2"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              Margin="-1,0,0,0">
											<Path Width="4" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 0 L 0 7 L 4 3.5 Z" />
										</RepeatButton>
									</Grid>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="VerticalScrollBarVisibility" Value="Auto" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollViewer}">
							<Grid Background="Transparent">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="*"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>

								<ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    Margin="{TemplateBinding Padding}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"/>

								<ScrollBar x:Name="PART_VerticalScrollBar"
                                       Grid.Column="1"
                                       Minimum="0.0"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"         
                                       Cursor="Arrow"
                                       AutomationProperties.AutomationId="VerticalScrollBar"/>
								<ScrollBar  x:Name="PART_HorizontalScrollBar"
                                        Orientation="Horizontal"
                                        Grid.Row="1"
                                        Minimum="0.0"
                                        Maximum="{TemplateBinding ScrollableWidth}"
                                        ViewportSize="{TemplateBinding ViewportWidth}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}"
                                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                        Cursor="Arrow"
                                        AutomationProperties.AutomationId="HorizontalScrollBar"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
				<Setter Property="Focusable" Value="false"/>
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollViewer}">
							<Grid Background="Transparent">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="*"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>

								<DockPanel Margin="{TemplateBinding Padding}">
									<ScrollViewer DockPanel.Dock="Top"
										HorizontalScrollBarVisibility="Hidden"
										VerticalScrollBarVisibility="Hidden"
										Focusable="false">
										<GridViewHeaderRowPresenter Margin="0"
                                            Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderStringFormat="{Binding Path=TemplatedParent.View.ColumnHeaderStringFormat,RelativeSource={RelativeSource TemplatedParent}}"
                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
									</ScrollViewer>
									<ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                      KeyboardNavigation.DirectionalNavigation="Local"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      CanContentScroll="{TemplateBinding CanContentScroll}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</DockPanel>

								<ScrollBar x:Name="PART_VerticalScrollBar"
								   Grid.Column="1"
								   Minimum="0.0"
								   Maximum="{TemplateBinding ScrollableHeight}"
								   ViewportSize="{TemplateBinding ViewportHeight}"
								   Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
								   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
								   Cursor="Arrow"
								   AutomationProperties.AutomationId="VerticalScrollBar"/>
								<ScrollBar  x:Name="PART_HorizontalScrollBar"
									Orientation="Horizontal"
									Grid.Row="1"
									Minimum="0.0"
									Maximum="{TemplateBinding ScrollableWidth}"
									ViewportSize="{TemplateBinding ViewportWidth}"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}"
									Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
									Cursor="Arrow"
									AutomationProperties.AutomationId="HorizontalScrollBar"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

		</ResourceDictionary>
	</Application.Resources>
</Application>
